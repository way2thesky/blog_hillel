version: '3.8'

services:
  db_blog:
    container_name: db_blog
    image: postgres:latest
    restart: on-failure
    volumes:
      - db-data-blog:/var/lib/postgresql/data
    networks:
      - webnet
    expose:
      - 5432
    environment:
      POSTGRES_DB: 'dbblog'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgdb'

  blog:
    container_name: blog
    build:
      context: .
      dockerfile: Dockerfile

    networks:
      - webnet
      - nginx_network
    expose:
      - 8000
    volumes:
      - ./config:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_HOST: 'db_blog'
      DATABASE_PORT: '5432'
    depends_on:
      - db_blog
    restart: on-failure
    command: >
      sh -c "python manage.py migrate &&
             python manage.py loaddata db.json &&
             python manage.py runserver 0.0.0.0:8000"


  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - webnet
      - nginx_network
    expose:
      - 8000
    volumes:
      - ./config:/config
    environment:
      C_FORCE_ROOT: 'true'
      DATABASE_URL: 'postgresql://postgres:postgdb@db:5432/dbblog'
      DATABASE_HOST: 'db'
      DATABASE_PORT: '5432'
      REDIS_URL: 'redis://redis:6379/0'
      REDIS_CACHE: 'redis:6379'
      AMQP_URL: 'amqp://rabbitmq:5672'
      CHECK_WEB: 'true'
      WEB_HOST: 'blog'
      WEB_PORT: '8000'
    depends_on:
      - redis
      - db_blog
    restart: on-failure
    command: celery -A core worker -B -l INFO

  redis:
    container_name: redis
    image: redis:5.0.6-alpine
    restart: on-failure
    networks:
      - webnet
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data



  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.0-alpine
    restart: on-failure
    networks:
      - webnet
    expose:
      - 4369
      - 5671
      - 5672
      - 15672
      - 25672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    networks:
      - nginx_network
    ports:
      - 80:80
      - 8001:8001
      - 8025:8025
    depends_on:
      - blog



networks:
  nginx_network:
  webnet:

volumes:
  db-data-blog:
  rabbitmq_data:
  redis: